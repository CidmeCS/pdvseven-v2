// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace a7D.PDV.WS2API
{
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Configuracao.
    /// </summary>
    public static partial class ConfiguracaoExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='chaves'>
            /// </param>
            /// <param name='tipoPDV'>
            /// </param>
            /// <param name='idPDV'>
            /// </param>
            /// <param name='sistema'>
            /// </param>
            public static object LerChaves(this IConfiguracao operations, IList<string> chaves, int? tipoPDV = default(int?), int? idPDV = default(int?), bool? sistema = default(bool?))
            {
                return Task.Factory.StartNew(s => ((IConfiguracao)s).LerChavesAsync(chaves, tipoPDV, idPDV, sistema), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='chaves'>
            /// </param>
            /// <param name='tipoPDV'>
            /// </param>
            /// <param name='idPDV'>
            /// </param>
            /// <param name='sistema'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> LerChavesAsync(this IConfiguracao operations, IList<string> chaves, int? tipoPDV = default(int?), int? idPDV = default(int?), bool? sistema = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.LerChavesWithHttpMessagesAsync(chaves, tipoPDV, idPDV, sistema, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
